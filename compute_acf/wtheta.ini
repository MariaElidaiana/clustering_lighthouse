; Demonstrate the angular correlation function in the standard library
[runtime]
sampler = test

[test]
save_dir=output_wtheta
fatal_errors=T

[output]
filename = wtheta_output.txt
format = text
verbosity= T

[pipeline]
modules = consistency camb halofit load_fits_nz unbiased_galaxies angular_power 2pt_matter 
likelihoods =
extra_output =
quiet=F
timing=F
debug=F
values = wtheta_values.ini

[DEFAULT]
INPUT_2PT_FILE =  internal_6x2pt_1225_fiducial_rebin_wtheorycov_cov_5x2pt_v12.18_3column.fits

[load_fits_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(INPUT_2PT_FILE)s
data_sets = lens
prefix_section = T
prefix_extension = T

[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py
use_lin_power=F


; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=2
; the following have to be commented out to run the projected matter power spectrum- explore dndz
zmin = 0.0
zmax = 4.0
nz = 10

; new simple module for using sigma8 as an input instead of A_s
; the only parameter required is the file location
[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[halofit]
file = cosmosis-standard-library/boltzmann/halofit/halofit_module.so

; Presumably this projects P(k) to c_ell
[angular_power]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 0.1
ell_max = 5.0e5 ;100000.0
n_ell = 400
position-position = lens-lens
verbose = T
get_kernel_peaks=F

; This module converts angular spectra from c_ell to correlation functions w(theta).
; It is slow and can be a little dodgy at small theta, so if you have a better
; version it would be great if you be happy to add it (or have us add it) to cosmosis
[2pt_matter]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
; Type of Hankel transform and output correlation function
; [0 = shear, 1 = matter, 2 = ggl]
corr_type = 1
